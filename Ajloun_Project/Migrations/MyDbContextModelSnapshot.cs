// <auto-generated />
using System;
using Ajloun_Project.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ajloun_Project.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ajloun_Project.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Admin");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AdminId")
                        .HasName("PK__Admins__719FE488DC652FC8");

                    b.HasIndex(new[] { "Username" }, "UQ__Admins__536C85E4ACF02193")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Admins__A9D10534CB632101")
                        .IsUnique();

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Ajloun_Project.Models.ArtWorkshop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("bit");

                    b.Property<int?>("MaxAge")
                        .HasColumnType("int");

                    b.Property<int?>("MinAge")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("PK__ArtWorks__3214EC07F429006A");

                    b.ToTable("ArtWorkshops");
                });

            modelBuilder.Entity("Ajloun_Project.Models.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleId"));

                    b.Property<string>("AuthorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("PublishDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ArticleId")
                        .HasName("PK__Articles__9C6270E8F94DD17C");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Ajloun_Project.Models.Artwork", b =>
                {
                    b.Property<int>("ArtworkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtworkId"));

                    b.Property<string>("ArtistEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ArtistName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PortfolioUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ArtworkId")
                        .HasName("PK__Artworks__D073AE9B3A56D2C0");

                    b.ToTable("Artworks");
                });

            modelBuilder.Entity("Ajloun_Project.Models.AssocEventRegistration", b =>
                {
                    b.Property<int>("RegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegistrationId"));

                    b.Property<int?>("AssocEventId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RegisteredAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RegistrationId")
                        .HasName("PK__AssocEve__6EF58810AC60C884");

                    b.HasIndex("AssocEventId");

                    b.HasIndex("UserId");

                    b.ToTable("AssocEventRegistrations");
                });

            modelBuilder.Entity("Ajloun_Project.Models.AssociationCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId")
                        .HasName("PK__Associat__19093A0B16815FFE");

                    b.HasIndex(new[] { "Name" }, "UQ__Associat__737584F670989B5A")
                        .IsUnique();

                    b.ToTable("AssociationCategories");
                });

            modelBuilder.Entity("Ajloun_Project.Models.AssociationEvent", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<int?>("AssociationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly?>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("EventType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PosterUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<TimeOnly?>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("EventId")
                        .HasName("PK__Associat__68ACACD3D8A09147");

                    b.HasIndex("AssociationId");

                    b.ToTable("AssociationEvents");
                });

            modelBuilder.Entity("Ajloun_Project.Models.AssociationJoinRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<int?>("AssociationId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RequestId")
                        .HasName("PK__Associat__33A8517A78397C99");

                    b.HasIndex("AssociationId");

                    b.HasIndex("UserId");

                    b.ToTable("AssociationJoinRequests");
                });

            modelBuilder.Entity("Ajloun_Project.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("Author")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("AvailableCopies")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CoverImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int?>("PublishedYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("BookId")
                        .HasName("PK__Books__3DE0C207B1E5AFF8");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Ajloun_Project.Models.BookCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId")
                        .HasName("PK__BookCate__19093A0B12864F58");

                    b.HasIndex(new[] { "Name" }, "UQ__BookCate__737584F6944A22CD")
                        .IsUnique();

                    b.ToTable("BookCategories");
                });

            modelBuilder.Entity("Ajloun_Project.Models.BookReservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<bool?>("Agreement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("PickupDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ReservationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateOnly?>("ReturnDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId")
                        .HasName("PK__BookRese__B7EE5F2412BFE50A");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("BookReservations");
                });

            modelBuilder.Entity("Ajloun_Project.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("AgeRange")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Courseimg")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsVisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CourseId")
                        .HasName("PK__Courses__C92D71A765914984");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Ajloun_Project.Models.CourseApplication", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<bool>("Agreement")
                        .HasColumnType("bit");

                    b.Property<string>("BirthCertificateImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("RejectionReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<DateTime?>("SubmittedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ApplicationId")
                        .HasName("PK__CourseAp__C93A4C998594821F");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("CourseApplications");
                });

            modelBuilder.Entity("Ajloun_Project.Models.CraftOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("CraftId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId")
                        .HasName("PK__CraftOrd__C3905BCF1AECE223");

                    b.HasIndex("CraftId");

                    b.HasIndex("UserId");

                    b.ToTable("CraftOrders");
                });

            modelBuilder.Entity("Ajloun_Project.Models.CulturalAssociation", b =>
                {
                    b.Property<int>("AssociationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssociationId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("FoundedYear")
                        .HasColumnType("int");

                    b.Property<int?>("MembersCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PresidentName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Region")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("AssociationId")
                        .HasName("PK__Cultural__B51A182D69818CC2");

                    b.HasIndex("CategoryId");

                    b.ToTable("CulturalAssociations");
                });

            modelBuilder.Entity("Ajloun_Project.Models.CulturalEvent", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PosterUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<TimeOnly?>("Time")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("EventId")
                        .HasName("PK__Cultural__7944C810377832BA");

                    b.ToTable("CulturalEvents");
                });

            modelBuilder.Entity("Ajloun_Project.Models.CulturalEventReservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<DateOnly>("AttendanceDate")
                        .HasColumnType("date");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReservationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId")
                        .HasName("PK__Cultural__B7EE5F24FEEC2269");

                    b.HasIndex("EventId");

                    b.HasIndex("UserId");

                    b.ToTable("CulturalEventReservations");
                });

            modelBuilder.Entity("Ajloun_Project.Models.Festival", b =>
                {
                    b.Property<int>("FestivalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FestivalId"));

                    b.Property<string>("BannerImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FestivalType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("FestivalId")
                        .HasName("PK__Festival__875D72CD3AFCAB34");

                    b.ToTable("Festivals");
                });

            modelBuilder.Entity("Ajloun_Project.Models.FestivalReservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<DateOnly>("AttendanceDate")
                        .HasColumnType("date");

                    b.Property<int?>("FestivalId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReservationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId")
                        .HasName("PK__Festival__B7EE5F24652004C9");

                    b.HasIndex("FestivalId");

                    b.HasIndex("UserId");

                    b.ToTable("FestivalReservations");
                });

            modelBuilder.Entity("Ajloun_Project.Models.GalleryImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("PK__GalleryI__3214EC071F27D28E");

                    b.ToTable("GalleryImages");
                });

            modelBuilder.Entity("Ajloun_Project.Models.HallBooking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<string>("AccompanyingActivities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachmentPath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CoordinatorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("CultureOrgId")
                        .HasColumnType("int");

                    b.Property<TimeOnly?>("EndTime")
                        .HasColumnType("time");

                    b.Property<DateOnly?>("EventDate")
                        .HasColumnType("date");

                    b.Property<string>("EventTitle")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EventType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("GuestCount")
                        .HasColumnType("int");

                    b.Property<string>("GuestOfHonor")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HallType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("NeedsAudienceInteraction")
                        .HasColumnType("bit");

                    b.Property<bool>("NeedsDocumentation")
                        .HasColumnType("bit");

                    b.Property<bool>("NeedsFilm")
                        .HasColumnType("bit");

                    b.Property<bool>("NeedsPconStage")
                        .HasColumnType("bit")
                        .HasColumnName("NeedsPCOnStage");

                    b.Property<bool>("NeedsProjector")
                        .HasColumnType("bit");

                    b.Property<bool>("NeedsScreens")
                        .HasColumnType("bit");

                    b.Property<string>("OtherTechnicalNeeds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("RequestDate")
                        .HasColumnType("date");

                    b.Property<string>("ResponsibleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<TimeOnly?>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BookingId")
                        .HasName("PK__HallBook__73951AEDD43995BE");

                    b.HasIndex("CultureOrgId");

                    b.HasIndex("UserId");

                    b.ToTable("HallBookings");
                });

            modelBuilder.Entity("Ajloun_Project.Models.Handicraft", b =>
                {
                    b.Property<int>("CraftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CraftId"));

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CraftId")
                        .HasName("PK__Handicra__6B18C69C79D9535A");

                    b.ToTable("Handicrafts");
                });

            modelBuilder.Entity("Ajloun_Project.Models.News", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsId"));

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("PublishDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Published");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("NewsId")
                        .HasName("PK__News__954EBDF33FF1DC26");

                    b.ToTable("News");
                });

            modelBuilder.Entity("Ajloun_Project.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NationalId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ProfileImage")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4C375C64C0");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D105345E76B9C9")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Ajloun_Project.Models.UserPost", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"));

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasDefaultValue("");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Draft");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PostId")
                        .HasName("PK__UserPost__AA12601821D6885E");

                    b.HasIndex("UserId");

                    b.ToTable("UserPosts");
                });

            modelBuilder.Entity("Ajloun_Project.Models.WorkshopRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BirthCertificateImage")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("RejectionReason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pending");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WorkshopId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Workshop__3214EC07E8CD5DC1");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkshopId");

                    b.ToTable("WorkshopRegistrations");
                });

            modelBuilder.Entity("Ajloun_Project.Models.AssocEventRegistration", b =>
                {
                    b.HasOne("Ajloun_Project.Models.AssociationEvent", "AssocEvent")
                        .WithMany("AssocEventRegistrations")
                        .HasForeignKey("AssocEventId")
                        .HasConstraintName("FK__AssocEven__Assoc__534D60F1");

                    b.HasOne("Ajloun_Project.Models.User", "User")
                        .WithMany("AssocEventRegistrations")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__AssocEven__UserI__5441852A");

                    b.Navigation("AssocEvent");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ajloun_Project.Models.AssociationEvent", b =>
                {
                    b.HasOne("Ajloun_Project.Models.CulturalAssociation", "Association")
                        .WithMany("AssociationEvents")
                        .HasForeignKey("AssociationId")
                        .HasConstraintName("FK__Associati__Assoc__4E88ABD4");

                    b.Navigation("Association");
                });

            modelBuilder.Entity("Ajloun_Project.Models.AssociationJoinRequest", b =>
                {
                    b.HasOne("Ajloun_Project.Models.CulturalAssociation", "Association")
                        .WithMany("AssociationJoinRequests")
                        .HasForeignKey("AssociationId")
                        .HasConstraintName("FK__Associati__Assoc__49C3F6B7");

                    b.HasOne("Ajloun_Project.Models.User", "User")
                        .WithMany("AssociationJoinRequests")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Associati__UserI__4AB81AF0");

                    b.Navigation("Association");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ajloun_Project.Models.Book", b =>
                {
                    b.HasOne("Ajloun_Project.Models.BookCategory", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Books__CategoryI__5FB337D6");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ajloun_Project.Models.BookReservation", b =>
                {
                    b.HasOne("Ajloun_Project.Models.Book", "Book")
                        .WithMany("BookReservations")
                        .HasForeignKey("BookId")
                        .IsRequired()
                        .HasConstraintName("FK__BookReser__BookI__628FA481");

                    b.HasOne("Ajloun_Project.Models.User", "User")
                        .WithMany("BookReservations")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__BookReser__UserI__6383C8BA");

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ajloun_Project.Models.CourseApplication", b =>
                {
                    b.HasOne("Ajloun_Project.Models.Course", "Course")
                        .WithMany("CourseApplications")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__CourseApp__Cours__3D5E1FD2");

                    b.HasOne("Ajloun_Project.Models.User", "User")
                        .WithMany("CourseApplications")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__CourseApp__UserI__3E52440B");

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ajloun_Project.Models.CraftOrder", b =>
                {
                    b.HasOne("Ajloun_Project.Models.Handicraft", "Craft")
                        .WithMany("CraftOrders")
                        .HasForeignKey("CraftId")
                        .HasConstraintName("FK__CraftOrde__Craft__6E01572D");

                    b.HasOne("Ajloun_Project.Models.User", "User")
                        .WithMany("CraftOrders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__CraftOrde__UserI__6EF57B66");

                    b.Navigation("Craft");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ajloun_Project.Models.CulturalAssociation", b =>
                {
                    b.HasOne("Ajloun_Project.Models.AssociationCategory", "Category")
                        .WithMany("CulturalAssociations")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__CulturalA__Categ__0B91BA14");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ajloun_Project.Models.CulturalEventReservation", b =>
                {
                    b.HasOne("Ajloun_Project.Models.CulturalEvent", "Event")
                        .WithMany("CulturalEventReservations")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__CulturalE__Event__02FC7413");

                    b.HasOne("Ajloun_Project.Models.User", "User")
                        .WithMany("CulturalEventReservations")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__CulturalE__UserI__03F0984C");

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ajloun_Project.Models.FestivalReservation", b =>
                {
                    b.HasOne("Ajloun_Project.Models.Festival", "Festival")
                        .WithMany("FestivalReservations")
                        .HasForeignKey("FestivalId")
                        .HasConstraintName("FK__FestivalR__Festi__7C4F7684");

                    b.HasOne("Ajloun_Project.Models.User", "User")
                        .WithMany("FestivalReservations")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__FestivalR__UserI__7D439ABD");

                    b.Navigation("Festival");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ajloun_Project.Models.HallBooking", b =>
                {
                    b.HasOne("Ajloun_Project.Models.CulturalAssociation", "CultureOrg")
                        .WithMany("HallBookings")
                        .HasForeignKey("CultureOrgId")
                        .HasConstraintName("FK_HallBookings_Associations");

                    b.HasOne("Ajloun_Project.Models.User", "User")
                        .WithMany("HallBookings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_HallBookings_Users");

                    b.Navigation("CultureOrg");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ajloun_Project.Models.UserPost", b =>
                {
                    b.HasOne("Ajloun_Project.Models.User", "User")
                        .WithMany("UserPosts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserPosts__UserI__17F790F9");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ajloun_Project.Models.WorkshopRegistration", b =>
                {
                    b.HasOne("Ajloun_Project.Models.User", "User")
                        .WithMany("WorkshopRegistrations")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__WorkshopR__UserI__4D5F7D71");

                    b.HasOne("Ajloun_Project.Models.ArtWorkshop", "Workshop")
                        .WithMany("WorkshopRegistrations")
                        .HasForeignKey("WorkshopId")
                        .IsRequired()
                        .HasConstraintName("FK__WorkshopR__Works__4E53A1AA");

                    b.Navigation("User");

                    b.Navigation("Workshop");
                });

            modelBuilder.Entity("Ajloun_Project.Models.ArtWorkshop", b =>
                {
                    b.Navigation("WorkshopRegistrations");
                });

            modelBuilder.Entity("Ajloun_Project.Models.AssociationCategory", b =>
                {
                    b.Navigation("CulturalAssociations");
                });

            modelBuilder.Entity("Ajloun_Project.Models.AssociationEvent", b =>
                {
                    b.Navigation("AssocEventRegistrations");
                });

            modelBuilder.Entity("Ajloun_Project.Models.Book", b =>
                {
                    b.Navigation("BookReservations");
                });

            modelBuilder.Entity("Ajloun_Project.Models.BookCategory", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Ajloun_Project.Models.Course", b =>
                {
                    b.Navigation("CourseApplications");
                });

            modelBuilder.Entity("Ajloun_Project.Models.CulturalAssociation", b =>
                {
                    b.Navigation("AssociationEvents");

                    b.Navigation("AssociationJoinRequests");

                    b.Navigation("HallBookings");
                });

            modelBuilder.Entity("Ajloun_Project.Models.CulturalEvent", b =>
                {
                    b.Navigation("CulturalEventReservations");
                });

            modelBuilder.Entity("Ajloun_Project.Models.Festival", b =>
                {
                    b.Navigation("FestivalReservations");
                });

            modelBuilder.Entity("Ajloun_Project.Models.Handicraft", b =>
                {
                    b.Navigation("CraftOrders");
                });

            modelBuilder.Entity("Ajloun_Project.Models.User", b =>
                {
                    b.Navigation("AssocEventRegistrations");

                    b.Navigation("AssociationJoinRequests");

                    b.Navigation("BookReservations");

                    b.Navigation("CourseApplications");

                    b.Navigation("CraftOrders");

                    b.Navigation("CulturalEventReservations");

                    b.Navigation("FestivalReservations");

                    b.Navigation("HallBookings");

                    b.Navigation("UserPosts");

                    b.Navigation("WorkshopRegistrations");
                });
#pragma warning restore 612, 618
        }
    }
}
