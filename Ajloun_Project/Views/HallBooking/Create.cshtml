@model Ajloun_Project.Models.HallBooking
@{
    ViewData["Title"] = "طلب حجز مسرح";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="mb-4 text-center">طلب حجز مسرح</h2>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success text-end">@TempData["Success"]</div>
}

<partial name="_ValidationScriptsPartial" />

@if (!ViewData.ModelState.IsValid && ViewData.ModelState.ErrorCount > 0)
{
    <div asp-validation-summary="All" class="alert alert-danger"></div>
}

@if (ViewBag.Conflicts != null)
{
    <div class="alert alert-warning text-end mt-3">
        <strong>🕒 المواعيد المحجوزة في هذا اليوم:</strong>
        <ul class="mt-2">
            @foreach (var item in ViewBag.Conflicts)
            {
                <li>
                    <span class="text-dark">
                        من @item.StartTime?.ToString(@"hh\:mm") إلى @item.EndTime?.ToString(@"hh\:mm")
                    </span> – <strong>@item.EventTitle</strong> (@item.RequestingParty)
                </li>
            }
        </ul>
    </div>
}



<div class="container" style="max-width: 950px; margin: auto; padding: 20px;">
    <form asp-action="Create" method="post" class="row g-3" onsubmit="return validateForm()">
        <div class="col-md-6">
            <label class="form-label">نوع المسرح</label>
            <input asp-for="HallType" class="form-control" required />
        </div>
<div class="col-md-6">
    <label class="form-label">الجهة الطالبة</label>
    <select asp-for="RequestingParty" class="form-select" required>
        <option value="">-- اختر جهة --</option>
        @foreach (var name in ViewBag.Associations as List<string>)
        {
                    <option value="@name" selected="@(Model?.RequestingParty == name ? "selected" : null)">@name</option>
                }
    </select>
</div>

        <div class="col-md-6">
            <label class="form-label">تاريخ الفعالية</label>
            <input asp-for="EventDate" type="date" class="form-control" required id="eventDate" />
            <span asp-validation-for="EventDate" class="text-danger"></span>
        </div>

        <div class="col-md-6">
            <label class="form-label">وقت البدء</label>
            <input asp-for="StartTime" type="time" class="form-control" id="startTime" />
        </div>

        <div class="col-md-6">
            <label class="form-label">وقت الانتهاء</label>
            <input asp-for="EndTime" type="time" class="form-control" id="endTime" />
        </div>

        <div class="col-md-6">
            <label class="form-label">نوع الفعالية</label>
            <input asp-for="EventType" class="form-control" />
        </div>

        <div class="col-md-12">
            <label class="form-label">عنوان الفعالية</label>
            <input asp-for="EventTitle" class="form-control" />
        </div>

        <div class="col-md-12">
            <label class="form-label">ضيف الشرف</label>
            <input asp-for="GuestOfHonor" class="form-control" />
        </div>

        <div class="col-md-12">
            <label class="form-label">الأنشطة المصاحبة</label>
            <input asp-for="AccompanyingActivities" class="form-control" />
        </div>

        <div class="col-md-4">
            <label class="form-label">عدد الحضور المتوقع</label>
            <input asp-for="GuestCount" type="number" class="form-control" />
        </div>

        <div class="col-md-6">
            <label class="form-label">اسم المنسق</label>
            <input asp-for="CoordinatorName" class="form-control" />
        </div>

        <div class="col-md-6">
            <label class="form-label">اسم المسؤول</label>
            <input asp-for="ResponsibleName" class="form-control" />
        </div>

        <div class="col-md-12">
            <label class="form-label">ملاحظات تقنية أخرى</label>
            <input asp-for="OtherTechnicalNeeds" class="form-control" />
        </div>
        <div class="col-12">
            <h5>الاحتياجات التقنية</h5>
        </div>

        <div class="col-md-3">
            <div class="d-flex justify-content-end align-items-center gap-2 flex-row-reverse">
                <input type="checkbox" name="NeedsScreens" value="true" class="form-check-input" @(Model?.NeedsScreens == true ? "checked" : "") />
                <label class="form-check-label">شاشات عرض</label>
            </div>
        </div>

        <div class="col-md-3">
            <div class="d-flex justify-content-end align-items-center gap-2 flex-row-reverse">
                <input type="checkbox" name="NeedsProjector" value="true" class="form-check-input" @(Model?.NeedsProjector == true ? "checked" : "") />
                <label class="form-check-label">جهاز عرض (بروجكتر)</label>
            </div>
        </div>

        <div class="col-md-3">
            <div class="d-flex justify-content-end align-items-center gap-2 flex-row-reverse">
                <input type="checkbox" name="NeedsAudienceInteraction" value="true" class="form-check-input" @(Model?.NeedsAudienceInteraction == true ? "checked" : "") />
                <label class="form-check-label">تفاعل مع الجمهور</label>
            </div>
        </div>

        <div class="col-md-3">
            <div class="d-flex justify-content-end align-items-center gap-2 flex-row-reverse">
                <input type="checkbox" name="NeedsFilm" value="true" class="form-check-input" @(Model?.NeedsFilm == true ? "checked" : "") />
                <label class="form-check-label">عرض فيلم</label>
            </div>
        </div>

        <div class="col-md-3">
            <div class="d-flex justify-content-end align-items-center gap-2 flex-row-reverse">
                <input type="checkbox" name="NeedsDocumentation" value="true" class="form-check-input" @(Model?.NeedsDocumentation == true ? "checked" : "") />
                <label class="form-check-label">توثيق الحدث</label>
            </div>
        </div>



        <div class="col-12 mt-3">
            <button type="submit" class="btn w-100" style="background-color: #006BFF; color: white;">إرسال الطلب</button>
        </div>
    </form>
</div>
@section Scripts {
    <script>
        function disableFormInputs(exceptions = []) {
            const inputs = document.querySelectorAll("form input, form select, form textarea, form button");
            inputs.forEach(input => {
                if (input.type !== "button" && input.type !== "submit" && !exceptions.includes(input.id)) {
                    input.disabled = true;
                }
            });
        }

        function enableFormInputs() {
            const inputs = document.querySelectorAll("form input, form select, form textarea, form button");
            inputs.forEach(input => input.disabled = false);
        }

        function showError(id, message) {
            let span = document.getElementById(id + "-error-message");

            if (!span) {
                span = document.createElement("span");
                span.id = id + "-error-message";
                span.className = "text-danger mt-1 d-block";
                document.getElementById(id).insertAdjacentElement("afterend", span);
            }

            span.innerText = message;
        }

        function clearError(id) {
            const span = document.getElementById(id + "-error-message");
            if (span) span.remove();
        }

        function validateInputsLive() {
            const eventDateInput = document.getElementById("eventDate");
            const startTimeInput = document.getElementById("startTime");
            const endTimeInput = document.getElementById("endTime");

            const eventDate = eventDateInput.value;
            const startTime = startTimeInput.value;
            const endTime = endTimeInput.value;

            const today = new Date().toISOString().split('T')[0];

            let hasError = false;

            if (eventDate && eventDate < today) {
                disableFormInputs(["eventDate"]);
                showError("eventDate", "⚠️ لا يمكن اختيار تاريخ قديم. يرجى إدخال تاريخ صالح لتفعيل النموذج.");
                hasError = true;
            } else {
                clearError("eventDate");
            }

            if (startTime && endTime && endTime <= startTime) {
                disableFormInputs(["startTime", "endTime"]);
                showError("endTime", "⚠️ وقت الانتهاء يجب أن يكون بعد وقت البدء.");
                hasError = true;
            } else {
                clearError("endTime");
            }

            if (!hasError) {
                enableFormInputs();
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            ["eventDate", "startTime", "endTime"].forEach(id => {
                const el = document.getElementById(id);
                if (el) {
                    el.addEventListener("input", validateInputsLive);
                    el.addEventListener("change", validateInputsLive);
                }
            });
        });

        function validateForm() {
            const eventDate = document.getElementById("eventDate").value;
            const startTime = document.getElementById("startTime").value;
            const endTime = document.getElementById("endTime").value;
            const today = new Date().toISOString().split('T')[0];

            if (eventDate < today || (startTime && endTime && endTime <= startTime)) {
                return false;
            }

            return true;
        }
    </script>
}

